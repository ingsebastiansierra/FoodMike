// PARTE 3: Render del Mapa Modal

  const renderMapModal = () => {
    if (!showMap) return null;

    return (
      <View style={styles.mapModalContainer}>
        <View style={styles.mapModalContent}>
          <View style={styles.mapHeader}>
            <Text style={styles.mapTitle}>📍 Selecciona la ubicación</Text>
            <TouchableOpacity onPress={() => setShowMap(false)} style={styles.mapCloseButton}>
              <Icon name="close" size={24} color={COLORS.dark} />
            </TouchableOpacity>
          </View>

          <View style={styles.mapContainer}>
            <MapView
              ref={mapRef}
              provider={PROVIDER_GOOGLE}
              style={styles.map}
              initialRegion={SAMACA_REGION}
              onPress={handleMapPress}
              showsUserLocation
              showsMyLocationButton
            >
              <Marker
                coordinate={selectedLocation}
                title="Ubicación de entrega"
                description={address || "Toca el mapa para seleccionar"}
                pinColor={COLORS.primary}
              />
            </MapView>
          </View>

          <View style={styles.mapFooter}>
            <Text style={styles.mapAddressText} numberOfLines={2}>
              {address || 'Toca el mapa para seleccionar una ubicación'}
            </Text>
            <TouchableOpacity style={styles.confirmLocationButton} onPress={handleConfirmLocation}>
              <Text style={styles.confirmLocationText}>✅ Confirmar Ubicación</Text>
            </TouchableOpacity>
          </View>
        </View>
      </View>
    );
  };

  // Carrito vacío
  if (cartItems.length === 0) {
    return (
      <View style={styles.container}>
        <StatusBar barStyle="light-content" backgroundColor={COLORS.primary} />
        <LinearGradient colors={[COLORS.primary, COLORS.accent]} style={styles.emptyContainer}>
          <Icon name="shopping-cart" size={80} color={COLORS.white} />
          <Text style={styles.emptyTitle}>🛒 Carrito Vacío</Text>
          <Text style={styles.emptySubtitle}>Agrega productos para continuar</Text>
          <TouchableOpacity
            style={styles.shopButton}
            onPress={() => {
              navigation.reset({
                index: 0,
                routes: [{ name: 'Inicio', params: { screen: 'HomeInitial' } }]
              });
            }}
          >
            <Text style={styles.shopButtonText}>🍽️ Explorar Restaurantes</Text>
          </TouchableOpacity>
        </LinearGradient>
      </View>
    );
  }

  // UI Principal con Acordeón
  return (
    <View style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor={COLORS.primary} />

      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity style={styles.backButton} onPress={handleBack}>
          <Icon name="arrow-back" size={24} color={COLORS.white} />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>💳 Verificación del Pago</Text>
        <View style={styles.headerSpacer} />
      </View>

      {/* Contenido en Acordeón */}
      <ScrollView style={styles.scrollContainer} showsVerticalScrollIndicator={false}>
        
        {/* Sección 1: Dirección */}
        <TouchableOpacity
          style={styles.accordionSection}
          onPress={() => toggleSection('address')}
          activeOpacity={0.9}
        >
          <View style={[styles.accordionHeader, completedSections.address && styles.accordionHeaderCompleted]}>
            <View style={styles.accordionHeaderLeft}>
              <View style={[styles.accordionNumber, completedSections.address && styles.accordionNumberCompleted]}>
                {completedSections.address ? (
                  <Icon name="check" size={20} color={COLORS.white} />
                ) : (
                  <Text style={styles.accordionNumberText}>1</Text>
                )}
              </View>
              <Text style={styles.accordionTitle}>Dirección de Entrega</Text>
            </View>
            <Icon 
              name={expandedSection === 'address' ? 'expand-less' : 'expand-more'} 
              size={24} 
              color={COLORS.dark} 
            />
          </View>
          
          {completedSections.address && expandedSection !== 'address' && (
            <View style={styles.accordionSummary}>
              <Text style={styles.accordionSummaryText}>📍 {address}</Text>
              <Text style={styles.accordionSummaryText}>📞 {phone}</Text>
            </View>
          )}
        </TouchableOpacity>

        {expandedSection === 'address' && (
          <AddressSection
            address={address}
            setAddress={setAddress}
            phone={phone}
            setPhone={setPhone}
            orderNotes={orderNotes}
            setOrderNotes={setOrderNotes}
            currentLocation={currentLocation}
            isGettingLocation={isGettingLocation}
            onGetLocation={handleGetCurrentLocation}
            onOpenMap={() => setShowMap(true)}
            onContinue={handleCompleteAddress}
          />
        )}

        {/* Sección 2: Pago */}
        <TouchableOpacity
          style={[styles.accordionSection, !completedSections.address && styles.accordionSectionDisabled]}
          onPress={() => toggleSection('payment')}
          activeOpacity={0.9}
          disabled={!completedSections.address}
        >
          <View style={[styles.accordionHeader, completedSections.payment && styles.accordionHeaderCompleted]}>
            <View style={styles.accordionHeaderLeft}>
              <View style={[styles.accordionNumber, completedSections.payment && styles.accordionNumberCompleted]}>
                {completedSections.payment ? (
                  <Icon name="check" size={20} color={COLORS.white} />
                ) : (
                  <Text style={styles.accordionNumberText}>2</Text>
                )}
              </View>
              <Text style={styles.accordionTitle}>Método de Pago</Text>
            </View>
            <Icon 
              name={expandedSection === 'payment' ? 'expand-less' : 'expand-more'} 
              size={24} 
              color={completedSections.address ? COLORS.dark : COLORS.gray} 
            />
          </View>
          
          {completedSections.payment && expandedSection !== 'payment' && (
            <View style={styles.accordionSummary}>
              <Text style={styles.accordionSummaryText}>
                {paymentMethod === 'cash' && '💵 Efectivo'}
                {paymentMethod === 'transfer' && '🏦 Nequi / Transferencia'}
                {paymentMethod === 'wompi' && '💳 Tarjeta (Wompi)'}
              </Text>
            </View>
          )}
        </TouchableOpacity>

        {expandedSection === 'payment' && (
          <PaymentSection
            paymentMethod={paymentMethod}
            setPaymentMethod={setPaymentMethod}
            finalTotal={finalTotal}
            cartItems={cartItems}
            onContinue={handleCompletePayment}
          />
        )}

        {/* Sección 3: Confirmar */}
        <TouchableOpacity
          style={[styles.accordionSection, (!completedSections.address || !completedSections.payment) && styles.accordionSectionDisabled]}
          onPress={() => toggleSection('confirm')}
          activeOpacity={0.9}
          disabled={!completedSections.address || !completedSections.payment}
        >
          <View style={styles.accordionHeader}>
            <View style={styles.accordionHeaderLeft}>
              <View style={styles.accordionNumber}>
                <Text style={styles.accordionNumberText}>3</Text>
              </View>
              <Text style={styles.accordionTitle}>Confirmar Pedido</Text>
            </View>
            <Icon 
              name={expandedSection === 'confirm' ? 'expand-less' : 'expand-more'} 
              size={24} 
              color={completedSections.address && completedSections.payment ? COLORS.dark : COLORS.gray} 
            />
          </View>
        </TouchableOpacity>

        {expandedSection === 'confirm' && (
          <ConfirmSection
            cartItems={cartItems}
            totalPrice={totalPrice}
            deliveryFee={deliveryFee}
            finalTotal={finalTotal}
            address={address}
            phone={phone}
            paymentMethod={paymentMethod}
            orderNotes={orderNotes}
          />
        )}
      </ScrollView>

      {/* Botón inferior fijo */}
      {completedSections.address && completedSections.payment && (
        <View style={styles.bottomContainer}>
          <TouchableOpacity
            style={[styles.nextButton, isProcessing && styles.nextButtonDisabled]}
            onPress={handlePlaceOrder}
            disabled={isProcessing}
          >
            <View style={styles.nextButtonGradient}>
              {isProcessing ? (
                <ActivityIndicator color={COLORS.white} />
              ) : (
                <>
                  <Text style={styles.nextButtonText}>🎉 Confirmar Pedido</Text>
                  <Text style={styles.nextButtonPrice}>{formatCurrency(finalTotal)}</Text>
                </>
              )}
            </View>
          </TouchableOpacity>
        </View>
      )}

      {/* Modal del mapa */}
      {renderMapModal()}
    </View>
  );
};
